# Generated by Django 5.0.10 on 2024-12-11 12:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Clinician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_id', models.IntegerField()),
                ('address', models.TextField()),
                ('percentage_split', models.FloatField()),
                ('field', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Modality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Modalities',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Specialities',
            },
        ),
        migrations.CreateModel(
            name='ClinicianGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.clinician')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.group')),
            ],
            options={
                'unique_together': {('clinician', 'group')},
            },
        ),
        migrations.AddField(
            model_name='clinician',
            name='groups',
            field=models.ManyToManyField(through='clinician_dashboard.ClinicianGroup', to='clinician_dashboard.group'),
        ),
        migrations.CreateModel(
            name='ClinicianLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.clinician')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.location')),
            ],
            options={
                'unique_together': {('clinician', 'location')},
            },
        ),
        migrations.AddField(
            model_name='clinician',
            name='locations',
            field=models.ManyToManyField(through='clinician_dashboard.ClinicianLocation', to='clinician_dashboard.location'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.appointmentstate')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.clinician')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.location')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicianModality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.clinician')),
                ('modality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.modality')),
            ],
            options={
                'unique_together': {('clinician', 'modality')},
            },
        ),
        migrations.AddField(
            model_name='clinician',
            name='modalities',
            field=models.ManyToManyField(through='clinician_dashboard.ClinicianModality', to='clinician_dashboard.modality'),
        ),
        migrations.CreateModel(
            name='ClinicianSpeciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.clinician')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinician_dashboard.speciality')),
            ],
            options={
                'unique_together': {('clinician', 'speciality')},
            },
        ),
        migrations.AddField(
            model_name='clinician',
            name='specialities',
            field=models.ManyToManyField(through='clinician_dashboard.ClinicianSpeciality', to='clinician_dashboard.speciality'),
        ),
    ]
