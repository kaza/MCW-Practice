name: Build and deploy Python app to Azure Web App - simple-practice

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install ODBC Driver
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y unixodbc-dev unixodbc odbcinst odbcinst1debian2 libodbc1 libodbc2 libodbcinst2 unixodbc-common
          sudo rm -f /etc/odbc.ini
          sudo rm -f /usr/lib/x86_64-linux-gnu/libodbc.so.2.0.0
          sudo rm -f /usr/lib/x86_64-linux-gnu/libodbcinst.so.2.0.0
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --allow-downgrades msodbcsql17
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends unixodbc-dev
          sudo apt-get clean
          sudo apt-get update

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Set environment variables
        run: |
          echo "DJANGO_SETTINGS_MODULE=config.settings.production" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput --settings=config.settings.production

      - name: Create startup script
        run: |
          echo '#!/bin/bash' > startup.sh
          echo 'python manage.py migrate --noinput' >> startup.sh
          echo 'python manage.py collectstatic --noinput' >> startup.sh
          echo 'gunicorn --bind 0.0.0.0 --timeout 600 --workers 4 --env DJANGO_SETTINGS_MODULE=config.settings.production config.wsgi:application' >> startup.sh
      
      - name: Make startup script executable
        run: chmod +x startup.sh

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D5BE660AA36848DA8B1AAC8EAEF968E1 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_86D9ACBB68C6436C94062E2474985781 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F4572D3F1E694D109792A802BCCB0BE9 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'simple-practice'
          slot-name: 'Production'
